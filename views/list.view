#import "common.view"

widget(container_y, {
	padding: 2em;

	widget(container_x, {
		// List panel
		spacing: 5;

		widget(container_z, {
			widget(backdrop, {
				//hidden: !($self.model.nodes);

				source: "img/listpanel_back.png";
				border: [40, 28, 40, 30];
				padding: [-0.21em, 0.5em, -25, 0.8em];

				widget(container_x, {
					widget(container_y, {
						widget(list_y, {
							chaseFocus: true;
							navWrap: true;
							$clone.focused <- focusedChild();
							.id = "list";
							width: $ui.width * 0.55;

							cloner($self.model.nodes, container_x, {
								//alphaSelf: iir(isFocused() * 1, 8) + isHovered() * 0.1;

								widget(loader, {
									source: "list/listitems/" + translate($self.type, "default",
										"audio", "audio",
										"image", "image",
										"separator", "separator",
										"station", "station",
										"video", "video") + ".view";
								});

								padding: [0, 0, -3, 0];
							});
						});
					});

					// Scrollbar
					widget(container_x, {
						align: right;
						padding: [0, -0.1em, 0.05em, 0];
						LIST_Y_SLIDER("list", true)
					});
				});
			});
		});

		// side panel
		widget(container_y, {
			height: $ui.height;
			width: $ui.width * 0.4;

			widget(loader, {
				time: 0.1;
				effect: blend;

				source: "list/list_itemviews/" +
					translate($clone.focused.type, "default",
						"image", "image",
						"station", "station",
						"video", "video")	+ ".view";
			});
		});
	});

	$page.glw.background = $clone.focused.metadata.background ?? $page.model.metadata.background/* ?? "img/background.png"*/;
});
