widget(container_z, {
  focusable: 0.6;
  focusOnClick: true;
  onEvent(itemMenu, eventWithProp(videoInfo, $self));

  // when clicking the item:
  // (1) if in touch mode, just focus the item
  // (2) otherwise, open the url
  onEvent(activate, select($ui.pointerVisible || ($ui.touch && true),
                           { focus("item"); },
                           navOpen($self.url, void, void, $parent.model)));

  widget(container_x, {
    //debug: true;
    width: $ui.width;

    widget(container_x, {
      hidden: !($ui.pointerVisible || ($ui.touch && true));
      clickable: true;
      /*onEvent(activate, {
        focus("item");
      });*/
      // open url when in touch mode
      onEvent(activate, navOpen($self.url, void, void, $parent.model));

      widget(image, {
        width: 1.5em * $self.itemHeight;
        source: "img/ic_play_arrow_48px.svg";
        color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.6);
      });

      widget(dummy, {
        //debug: true;
        width: 0.5em;
      });
    });

    widget(container_z, {
      //debug: true;
      width: 2.5em * $self.itemHeight;

      widget(image, {
        hidden: !($self.showDefaultImage);
        source: "img/ic_movie_48px.svg";
        color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.6);
      });

      widget(image, {
        source: $self.metadata.icon ?? ($self.url + "#cover");
        color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.6);
        $self.primaryColor = select(isLoaded(), RGBToString(primaryColor() * 0.3), "#444444");
        $self.showDefaultImage = isError();
      });
    });

    widget(dummy, {
      //debug: true;
      width: 0.5em;
    });

    widget(label, {
      //debug: true;
      caption: $self.metadata.title;
      color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.7);
      sizeScale: 1.0 * $self.textSize;
      filterConstraintX: true;
    });

    widget(dummy, { width: 0.5em; });

    widget(container_x, {
      //debug: true;
      hidden: isVoid($self.metadata.year);

      widget(label, {
        //debug: true;
        caption: fmt("(%s)", $self.metadata.year);
        color: select(isFocused() || isHovered() || isPressed(), 0.7, 0.4);
        sizeScale: 0.9 * $self.textSize;
      });

      widget(dummy, { width: 0.5em; });
    });

    widget(container_x, {
      //debug: true;
      hidden: !($self.restartpos > 0 || $self.metadata.duration > 0);

      widget(label, {
        //debug: true;
        hidden: !($self.restartpos > 0);
        caption: value2duration($self.restartpos) + " / ";
        color: select(isFocused() || isHovered() || isPressed(), 0.7, 0.4);
        sizeScale: 0.9 * $self.textSize;
        align: center;
      });

      widget(label, {
        //debug: true;
        hidden: !($self.metadata.duration > 0);
        filterConstraintY: true;
        caption: value2duration($self.metadata.duration);
        color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.7);
        sizeScale: 1.0 * $self.textSize;
        align: right;
      });

      widget(dummy, { width: 0.5em; });
    });

    widget(image, {
      //debug: true;
      width: 1.4em * $self.itemHeight;
      color: $self.playcount < 1;
      alpha: !($self.playcount < 1);
      source: "img/ic_check_48px.svg";
      align: right;
    });

  });
});
