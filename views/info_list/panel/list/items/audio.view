widget(container_x, {
  focusable: 0.6;
  focusOnClick: true;
  width: $ui.width;
  onEvent(activate, playTrackFromSource($self, $parent.model));
  onEvent(itemMenu, eventWithProp(defaultInfo, $self));

  widget(container_x, {
    width: 2.5em * $self.itemHeight;
    //debug: true;

    widget(container_z, {
      widget(image, {
        hidden: isVoid($self.metadata.icon);
        color: select(isFocused() || isHovered() || isPressed(), 0.9, 0.5);
        source: $self.metadata.icon;
        width: 2.5em * $self.itemHeight;
        //debug: true;
        $self.primaryColor = RGBToString(primaryColor() * 0.3);
      });

      widget(container_z, {
        margin: 0.3em;

        widget(throbber, {
          alpha: iir($self.media.loading, 8);
        });

        widget(icon, {
          size: 1.5em;
          source: translate($self.media.playstatus, "",
                            "play", "skin://icons/ic_play_arrow_48px.svg",
                            "pause", "skin://icons/ic_pause_48px.svg");
          hidden: ($self.media.playstatus != "pause" &&
                   $self.media.playstatus != "play") || $self.media.loading;
        });
      });
    });
  });

  widget(dummy, {
    //debug: true;
    width: 1em;
  });

  widget(label, {
    //debug: true;
    caption: $self.metadata.title ?? "No title available";
    color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.7);
    sizeScale: 1.0 * $self.textSize;
    filterConstraintX: true;
  });

  widget(label, {
    //debug: true;
    hidden: isVoid($self.metadata.artist);
    caption: $self.metadata.artist;
    color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.7);
    sizeScale: 1.0 * $self.textSize;
    filterConstraintX: true;
  });

  widget(label, {
    //debug: true;
    hidden: $self.metadata.duration < 1;
    caption: value2duration($self.metadata.duration);
    color: select(isFocused() || isHovered() || isPressed(), 1.0, 0.7);
    sizeScale: 1.0 * $self.textSize;
    align: right;
  });
});
