#define PLATE_GFX() {
  .source = "img/shadedplate.png";
  .border = 4;
  .padding = [0, -2, 0, -2];
}

#define PLATE_COLOR_DELETE() {[0.6, 0.25, 0.25]}

#define textInput(PROPERTY, EVENT) {
  widget(backdrop, {
    .source = "skin://graphics/border-tiny.png";
    .borderOnly = true;
    .border = 4;
    .color = 0.5;
    BODY;
  });
}

#define popupInputField(BODY) {
  widget(backdrop, {
    .source = "skin://graphics/border-tiny.png";
    .borderOnly = true;
    .border = 4;
    .color = 0.5;
    BODY;
  });
}

#define popupButtonOK(EVENT, ENABLED, HIDDEN) {

  widget(backdrop, {
    source: "skin://graphics/border-tiny.png";
    borderOnly: true;
    border: 4;
    padding: [0,0,$ui.size,0];
    hidden: HIDDEN;
    focusable: ENABLED;
    onEvent(activate, EVENT);

    alpha: select(isHovered() || isFocused(), 1, 0.5);

    widget(container_x, {
      align: center;
      widget(icon, {
source: "dataroot://resources/svg/Check.svg";
      });
      widget(label, {
caption: _("OK");
      sizeScale: 1.4;
      });
    });
  });

}

#define popupButton(EVENT, CAPTION, ENABLED, HIDDEN) {

  widget(backdrop, {
    source: "theme://graphics/border-tiny.png";
    borderOnly: true;
    border: 4;
    hidden: HIDDEN;
    focusable: ENABLED;
    onEvent(activate, EVENT);

    alpha: select(isHovered() || isFocused(), 1, 0.5);

    widget(container_x, {
      widget(icon, {
        source: "dataroot://resources/svg/Check.svg";
      });
      widget(label, {
        caption: _(CAPTION);
      });
    });
  });

}

#define LIST_Y_SLIDER(ID, FOCUSABLE=false, IMAGE="img/scrollbar.png") {
  widget(slider_y, {
    bind(ID);
    .width = 20;
    .focusable = 0.2 * canScroll();
    .navFocusable = FOCUSABLE;
    .alpha = iir(canScroll(), 16);

    widget(backdrop, {
      .alphaSelf = 1;//iir(0.3 + 0.7 * (isFocused() || isPressed()), 8);
      .color = 0.55 + 0.45 * (isFocused() || isPressed() || isHovered());
      .source = IMAGE;
      .border =  [2, 4, 2, 4];
    });
  });
}

#define STAR_FULL() {
  widget(icon, {
    color: [1.0, 1.0, 0];
    source: "img/star.png";
    width: 1.1em;
  });
}

#define STAR_DIMMED() {
  widget(icon, {
    color: [0.2, 0.2, 0];
    source: "img/star.png";
    width: 1.1em;
  });
}

#define TextStyleItem() {
  font: translate($page.model.metadata.font, $page.model.metadata.font,
  "default", $ui.font);
  shadow: true;
  outline: true;
}

#define VerticalSeparator() {
  widget(backdrop, {
    height: 1;
    source: "img/separator_horizontal.png";
  });
}
